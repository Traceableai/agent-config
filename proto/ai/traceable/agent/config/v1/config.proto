syntax = "proto3";

package ai.traceable.agent.config.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/Traceableai/agent-config/gen/go/v1";

// Parent configuration object for Opa & Libtraceable Config
message AgentConfig {
  Opa opa = 1;
  LibtraceableConfig libtraceable = 3;
}

// Opa covers the options related to the mechanics for getting Open Policy Agent
// configuration file. The client should use secure and token option from
// reporting settings.
message Opa {
  // when `true` Open Policy Agent evaluation is enabled to block request
  google.protobuf.BoolValue enabled = 1;

  // endpoint for polling OPA config file e.g. http://opa.traceableai:8181/
  google.protobuf.StringValue endpoint = 2;

  // poll period in seconds to query OPA service
  google.protobuf.Int32Value poll_period_seconds = 3;

  // Certificate filename containing the CA to verify the server's certificate.
  // If this is non-empty, use `https` for the protocol in `endpoint` above.
  google.protobuf.StringValue cert_file = 4;
}

// Libtraceable config
message LibtraceableConfig {
  google.protobuf.BoolValue debug_log = 1;
  RemoteConfig remote_config = 2;
  BlockingConfig blocking_config = 3;
  ApiDiscoveryConfig api_discovery = 4;
  SamplingConfig sampling = 5;
}

// RemoteConfig defines the remote endpoint where the config is fetched from
message RemoteConfig {
  // enabled denotes if config needs to be fetched from remote or not
  google.protobuf.BoolValue enabled = 1;
  // endpoint denotes the agentManager endpoint to connect to for config.
  // eg: localhost:5441
  google.protobuf.StringValue endpoint = 2;
  // poll period in seconds to query for config updates
  google.protobuf.Int32Value poll_period_seconds = 3;
  // Certificate filename containing the CA to verify the server's certificate
  google.protobuf.StringValue cert_file = 4;
}

message BlockingConfig {
  google.protobuf.BoolValue enabled = 1;
  ModsecurityConfig modsecurity = 2;
  RangeBlockingConfig region_blocking = 3;
  google.protobuf.BoolValue evaluate_body = 4;
  google.protobuf.BoolValue skip_internal_request = 5;
}

message ApiDiscoveryConfig {
  google.protobuf.BoolValue enabled = 1;
}

message SamplingConfig {
  google.protobuf.BoolValue enabled = 1;
}

message ModsecurityConfig {
  google.protobuf.BoolValue enabled = 1;
}

message RangeBlockingConfig {
  google.protobuf.BoolValue enabled = 1;
}
